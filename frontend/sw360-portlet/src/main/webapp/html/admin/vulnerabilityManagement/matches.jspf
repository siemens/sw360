<%--
  ~ SPDX-FileCopyrightText: ï¿½ 2022 Siemens AG
  ~ SPDX-License-Identifier: EPL-2.0
--%>

<portlet:resourceURL var="acceptMatchURL">
    <portlet:param name="<%=PortalConstants.ACTION%>" value="<%=PortalConstants.VM_MATCH_ACCEPT%>"/>
</portlet:resourceURL>
<portlet:resourceURL var="declineMatchURL">
    <portlet:param name="<%=PortalConstants.ACTION%>" value="<%=PortalConstants.VM_MATCH_DECLINE%>"/>
</portlet:resourceURL>

<portlet:resourceURL var="exportMatchesURL">
    <portlet:param name="<%=PortalConstants.ACTION%>" value="<%=PortalConstants.EXPORT_TO_EXCEL%>"/>
</portlet:resourceURL>
<portlet:resourceURL var="getMatchesURL">
    <portlet:param name="<%=PortalConstants.ACTION%>" value="<%=PortalConstants.VM_MATCH_GET_LIST%>"/>
</portlet:resourceURL>

<div id="matchTableDiv">
    <span class="pull-right">
        <input type="button" class="addButton" onclick="window.location.href='<%=exportMatchesURL%>'" value="Export all Matches">
    </span>
    <table id="matchTable" cellpadding="0" cellspacing="0" border="0" class="display">
        <tfoot>
        <tr>
            <th colspan="5"></th>
        </tr>
        </tfoot>
    </table>
</div>

<script type="text/javascript">
    require(['jquery', 'datatables.net'], function ($) {

    $("#matchesTab").on('click', getMatches);
    var matchTable;

    function createMatchTable(vmMatchList) {
        var result = [];


        for ( var index = 0; index < vmMatchList.length; index++){
            var vmMatch = vmMatchList[index];
            var releaseLinkUrl = '<sw360:DisplayReleaseLink bare="true" releaseId="DUMMY_RELEASE_ID" />';
            var releaseLinkText = vmMatch.vendorName+" | "+vmMatch.componentName+" | "+vmMatch.releaseVersion+" | "+vmMatch.releaseCpe+" | "+vmMatch.releaseSvmId;
            result.push({
                "DT_RowId": vmMatch.id,
                "0": vmMatch.vmComponentVendor+" | "+vmMatch.vmComponentName+" | "+vmMatch.vmComponentVersion+" | "+vmMatch.vmComponentCpe+" | "+vmMatch.vmComponentVmid,
                "1": vmMatch.matchTypesUI,
                "2": "<a href = '"+releaseLinkUrl.replace("DUMMY_RELEASE_ID", vmMatch.releaseId)+"'>"+releaseLinkText+"</a>",
                "3": "<div  id='state_"+vmMatch.id+"'>"+vmMatch.state+ "</div>",
                "4": "<div class='dataTables_cell_nowrap'>"+
                    "<input type='button' data-vmmatch-id='"+vmMatch.id+"' id='am_"+vmMatch.id+"' value='Accept' class='acceptButton'>"+
                    "<input type='button' data-vmmatch-id='"+vmMatch.id+"' id='dm_"+vmMatch.id+"' value='Decline' class='addButton declineButton'>"+
                    "</div>"

            });
        }

        matchTable = $('#matchTable').addClass('initialized').dataTable({
            pagingType: "full_numbers",
            data: result,
            dom: "lrtip",
            columns: [
                { "title": "SVM Component (Vendor | Component | Version | CPE | SVM ID)" },
                { "title": "Matches" },
                { "title": "SW360 Release (Vendor | Component | Version | CPE | SVM ID)" },
                { "title": "Status"},
                { "title": "Status Preview"}
            ]
        });
        $("#matchTable").on('click', ".acceptButton", acceptMatch);
        $("#matchTable").on('click', ".declineButton", declineMatch);
    }

    function getMatches() {
        if(matchTable && matchTable.hasClass('initialized')){
            return;
        }
        $.ajax({
            type: 'POST',
            url: '<%=getMatchesURL%>',
            cache: false,
            data: {
                <portlet:namespace/>vmMatchState: ''
                },
            success: function (data) {
                if(data.result != 'SUCCESS'){
                    alert("There was an error on getting the matches.. Please check log for details.");
                }
                createMatchTable(data.vmMatchList);
            },
            error: function () {
                alert("There was an error on getting the matches.. Please check log for details.");
            }
        });
    }

    function acceptMatch() {
        var id = this.dataset.vmmatchId;
        var $resultElement = $('#am_' + id);
        $resultElement.disabled = true;
        $resultElement.val("...");

        var $resultElement = $('#dm_' + id);
        $resultElement.disabled = true;

        doAjax('<%=acceptMatchURL%>', id , accepted);
    }

    function declineMatch() {
        var id = this.dataset.vmmatchId;
        var $resultElement = $('#am_' + id);
        $resultElement.disabled = true;

        var $resultElement = $('#dm_' + id);
        $resultElement.disabled = true;
        $resultElement.val("...");

        doAjax('<%=declineMatchURL%>', id , declined);
    }

    function doAjax(url, id , callback) {
        jQuery.ajax({
            type: 'POST',
            url: url,
            cache: false,
            data: {
                <portlet:namespace/>vmMatchId: id
                },
            success: function (data) {
                callback(true, id, data);
            },
            error: function () {
                callback(false, id, data);
            }
        });
    }

    function accepted(success, id, data) {
        var $resultElement = $('#am_' + id);
        var msg = "ERROR";
        if (success){
            msg = data.result == "SUCCESS" ? "ACCEPTED" : data.result;
            var $other = $('#dm_' + id);
            $other.val("Decline");
            $other.disabled = false;
        }
        $resultElement.val(msg);
        $resultElement.disabled = false;
    }

    function declined(success, id, data) {
        var $resultElement = $('#dm_' + id);
        var msg = "ERROR";
        if (success){
            msg = data.result == "SUCCESS" ? "DECLINED" : data.result;
            var $other = $('#am_' + id);
            $other.val("Accept");
            $other.disabled = false;
        }
        $resultElement.val(msg);
        $resultElement.disabled = false;
    }
    });

</script>


